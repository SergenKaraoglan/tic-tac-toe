{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","i","this","squares","Array","renderSquare","React","Component","Game","state","xIsNext","history","moves","stepNumber","moveAsc","setState","step","row","Math","floor","col","slice","calculateWinner","squaresCopy","concat","map","move","length","desc","coor","jumpTo","style","backgroundColor","status","handleClick","changeMoveOrder","board","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c3c5c1c9.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n\nfunction Square(props){\n    return (\n        <button className = \"Square\" onClick = {props.onClick}>\n            {props.value}\n        </button>\n    );\n}\n\nclass Board extends React.Component {\n    renderSquare(i) {\n        return (\n                <Square\n                    value = {this.props.squares[i]}\n                    onClick = {() => this.props.onClick(i)}\n                />\n        );\n    }\n\n    render() {\n        const squares = Array(9);\n        for(let i = 0; i < 9; i++){\n                squares[i] = this.renderSquare(i);\n        }\n        return squares;\n    }\n\n\n}\n\nclass Game extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            xIsNext: true,\n            history: [ {squares: Array(9), moves: Array(2)}],\n            stepNumber: 0,\n            moveAsc: true\n        };\n\n    }\n\n    changeMoveOrder(){\n        this.setState({\n            moveAsc: !this.state.moveAsc\n        });\n    }\n    jumpTo(step) {\n        this.setState({\n            \n            stepNumber: step,\n            xIsNext: (step % 2) === 0\n        });\n      }\n    \n    handleClick(i) {\n        const [row, col] = [Math.floor(i/3) + 1, i % 3 + 1];\n        const history = this.state.history.slice(0, this.state.stepNumber + 1)\n        const squares = history[this.state.stepNumber].squares;\n        \n        if (!squares[i] && !calculateWinner(squares, this.state.stepNumber)){\n            let squaresCopy = squares.slice();\n            squaresCopy[i] = this.state.xIsNext ? \"X\" : \"O\";\n\n            this.setState({\n                xIsNext: !this.state.xIsNext,\n                history: history.concat([\n                    {squares: squaresCopy, moves: [row, col]}\n                ]),\n                stepNumber: this.state.stepNumber + 1,\n                \n            });\n\n            \n        }\n    }\n\n    render() {\n        const history = this.state.history;\n        const moves = history.map((step, move) => {\n            if (!this.state.moveAsc){\n                move = this.state.history.length - 1 - move;\n            }\n            const desc = move ?\n              'Go to move #' + move :\n              'Go to game start';\n            \n              \n            const coor = this.state.history[move].moves;\n\n            return (\n              <li key={move}>\n                <button onClick={() => this.jumpTo(move)} \n                    style={{backgroundColor: this.state.stepNumber === move ? \"yellow\" : \"\"}}>\n                        {desc}\n                </button>\n                {move !== 0 && <span>{\" row: \" + coor[0] + \" col: \" + coor[1]}</span>}\n              </li>\n            );\n          });\n        const squares = history[this.state.stepNumber].squares;\n        let status = calculateWinner(squares, this.state.stepNumber);\n        if (!status){\n            status = \"Turn for: \" + (this.state.xIsNext ? \"X\" : \"O\");\n        }\n\n        return (\n            <div className = \"Game\">\n                <div className = \"GameBoard\">\n                    <Board \n                        squares = {squares}\n                        onClick = {i => this.handleClick(i)}\n                    />\n                </div>\n                <div className = \"GameInfo\">\n                    {status}\n                </div>\n                <button onClick = {() => this.changeMoveOrder()}>Reverse order</button>\n                <ul>\n                    {moves}\n                </ul>\n            </div>\n        );\n    }\n}\n\n// ==============================\n\nReactDOM.render(<Game />, document.getElementById('root'));\n\nfunction calculateWinner(board, stepNumber){\n    \n    if (stepNumber >= 5) {\n        const lines = [\n            [0, 1, 2],\n            [3, 4, 5],\n            [6, 7, 8],\n            [0, 3, 6],\n            [1, 4, 7],\n            [2, 5, 8],\n            [0, 4, 8],\n            [2, 4, 6]\n        ];\n        for (let i = 0; i < lines.length; i++){\n            const [a, b, c] = lines[i];\n            // calculate draw (two different pieces on every line)\n            if (board[a] && board[a] === board[b] && board[b] === board[c]){\n                return board[a] + ' is winner';\n            }\n        }\n    }\n\n    if (stepNumber === 9){\n        return \"Draw\";\n    }\n    return null;\n}"],"sourceRoot":""}